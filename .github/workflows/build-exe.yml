name: Build Windows EXE

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build Windows Executable
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Debug - List files
      run: |
        echo "Current directory:"
        dir
        echo "Python version:"
        python --version
        echo "Installed packages:"
        pip list
    
    - name: Build Windows EXE with PyInstaller
      run: |
        pyinstaller --onefile --windowed `
          --name NanoFiche_Image_Prep `
          --add-data "nanofiche_core;nanofiche_core" `
          --clean `
          nanofiche_image_prep.py
    
    - name: Test executable
      run: |
        if (Test-Path "dist\NanoFiche_Image_Prep.exe") {
          Write-Host "Executable built successfully!"
          Get-Item "dist\NanoFiche_Image_Prep.exe" | Select-Object Name, Length, LastWriteTime
        } else {
          Write-Error "Executable not found!"
          exit 1
        }
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: NanoFiche-Windows-EXE
        path: dist/NanoFiche_Image_Prep.exe
        retention-days: 30
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: ncipollo/release-action@v1
      with:
        artifacts: dist/NanoFiche_Image_Prep.exe
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: false
        prerelease: false
        allowUpdates: true
        body: |
          # NanoFiche Image Prep - Windows Release
          
          ## Installation
          1. Download `NanoFiche_Image_Prep.exe` from the assets below
          2. Run the executable directly (no installation required)
          3. Windows may show a security warning - click "More info" and "Run anyway"
          
          ## Features
          - Optimal bin packing for raster images
          - Support for square, rectangle, circle, and ellipse envelopes
          - Binary envelope search algorithm for complex shapes
          - Preview generation with approval workflow
          - Comprehensive logging system
          
          ## System Requirements
          - Windows 10 or later (64-bit)
          - No additional dependencies required
          
          ## File Size
          The executable is approximately 18-20 MB as it includes all Python runtime and dependencies.